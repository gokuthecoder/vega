DOMAIN_NAME="https://vegamovies.ps"
MONGO_URI=mongodb://localhost:27017/movies-series

11973
3995
214462
create a report if,
"info": "",
"synopsis": "",
"synopsis_descriptions": "",
"post_screenshot_url": [],
"imdbID": "tt1024369",
"download_btn": "",
"button_collection": [],

also extarct nextdrive link and also map button_collection and extarct link and then comapre means if number of link bith not match then also generate report fot that post





import express from 'express';
import 'dotenv/config';
import connectToDatabase from './src/config/db.config.js';
import { extractContentToJson } from './src/utils/htmlParser.js';
import { getVegamoviesPost } from './src/libs/vegamovies.js';
import { findImdbIds } from './src/utils/_get_imdb_id.js';
import { extractContentBetweenHrTags } from './src/utils/_download_component.js';
import { extractImageLinksFromSection } from './src/utils/_screenshot_component.js';
import { extractButtonsAndTitlesFromJson } from './src/utils/_extract_links_with_btn.js';
import { downloadImage } from './src/utils/_downlaod_image.js';
import path from 'path';
import { fileURLToPath } from 'url';
import { fetchAndSaveCategories } from './src/libs/categoryscraper.js';
import movieModel from './src/models/movie.model.js';

const app = express();

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

app.use('/wp-content', express.static(path.join(__dirname, 'public/wp-content')));
connectToDatabase();

function removeUnusualBackslashes(text) {
    return text.replace(/\\+/g, '');
}

app.get('/', async (req, res) => {
    try {
        const jsonData = await getVegamoviesPost('3995');
        const { categories } = jsonData;

        if (!categories || !Array.isArray(categories) || categories.length === 0) {
            return res.status(400).json({ error: "No categories found in the response" });
        };

        const savedCategories = await fetchAndSaveCategories(categories);

        const imdbid = await findImdbIds(jsonData?.content?.rendered);

        const media = jsonData._links["wp:featuredmedia"][0].href;

        const posterImg = await downloadImage(media);

        const { id, date, date_gmt, modified, modified_gmt, slug, title, content, excerpt } = jsonData;
        const { rendered: titleRendered } = title || {};
        const { rendered: contentRendered } = content || {};
        const { rendered: excerptRendered } = excerpt || {};
        const cleanRenderedContent = removeUnusualBackslashes(contentRendered);

        const [jsonResponse, linkwithbtn, getss] = await Promise.all([
            extractContentToJson(cleanRenderedContent),
            extractContentBetweenHrTags(cleanRenderedContent),
            extractImageLinksFromSection(cleanRenderedContent),
        ]);

        const {entry_content, about_me, head_download, info, synopsis, synopsis_descriptions } = jsonResponse;

        const getLinkWithBtn = await extractButtonsAndTitlesFromJson(linkwithbtn);

        const newMovie = new movieModel({
            postID: id,
            title: titleRendered,
            slug: slug,
            categories: savedCategories,
            postImgSrc:posterImg?.source_url || "",
            postImgSrcSet: posterImg?.media_details || "",
            postImgSrcPath: posterImg?.mainImage || "",
            postImgSrcSetPath: posterImg?.savedImages || "",
            entry_content: entry_content,
            about_me:about_me,
            head_download: head_download,
            info:info,
            synopsis:synopsis,
            synopsis_descriptions: synopsis_descriptions,
            post_screenshot_url: getss,
            imdbID:imdbid,
            download_btn: linkwithbtn,
            button_collection: getLinkWithBtn,
            org_rendered_content: contentRendered,
            org_excerpt:excerptRendered,
            date:date,
            date_gmt:date_gmt,
            modified: modified,
            modified_gmt: modified_gmt
        });

        const savedMovie = await newMovie.save();

        res.status(200).json({
            savedMovie
        });

    } catch (error) {
        console.error('Error occurred:', error.stack || error);
        res.status(500).json({ error: 'An error occurred while fetching data' });
    }
});

app.listen(5000, () => {
    console.log('Server is running at port 5000');
});
so  now write a code which work is notice extarct all link (nexdrive link: https://nexdrive.lol/genxfm784776189733/) this type of link and  extarct link also from button_collection , but 

